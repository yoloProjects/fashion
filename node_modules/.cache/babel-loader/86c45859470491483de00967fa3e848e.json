{"ast":null,"code":"import _slicedToArray from \"C:\\\\PythonProjects\\\\For GIt\\\\FashionDetect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringNGrams } from '@tensorflow/tfjs-core';\nimport { stringNGramsImplCPU } from '../kernel_utils/shared';\nexport function stringNGrams(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var separator = attrs.separator,\n      nGramWidths = attrs.nGramWidths,\n      leftPad = attrs.leftPad,\n      rightPad = attrs.rightPad,\n      padWidth = attrs.padWidth,\n      preserveShortSequences = attrs.preserveShortSequences;\n  var data = inputs.data,\n      dataSplits = inputs.dataSplits;\n  var $data = backend.readSync(data.dataId);\n  var $dataSplits = backend.readSync(dataSplits.dataId);\n\n  var _stringNGramsImplCPU = stringNGramsImplCPU($data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences),\n      _stringNGramsImplCPU2 = _slicedToArray(_stringNGramsImplCPU, 2),\n      nGrams = _stringNGramsImplCPU2[0],\n      nGramsSplits = _stringNGramsImplCPU2[1];\n\n  return [backend.makeTensorInfo([nGrams.length], 'string', nGrams), backend.makeTensorInfo(dataSplits.shape, 'int32', nGramsSplits)];\n}\nexport var stringNGramsConfig = {\n  kernelName: StringNGrams,\n  backendName: 'webgl',\n  kernelFunc: stringNGrams\n};","map":null,"metadata":{},"sourceType":"module"}