{"ast":null,"code":"import _toConsumableArray from \"C:\\\\PythonProjects\\\\Fashion\\\\YOLOTFjf\\\\tfjs-yolov5-example\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Diag, util } from '@tensorflow/tfjs-core';\nimport { DiagProgram } from '../diag_gpu';\nimport { reshape } from './Reshape';\nexport function diag(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n  var outShape = [].concat(_toConsumableArray(x.shape), _toConsumableArray(x.shape));\n  var xSize = util.sizeFromShape(x.shape);\n  var flat = reshape({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      shape: [xSize]\n    }\n  });\n  var program = new DiagProgram(xSize);\n  var res = backend.runWebGLProgram(program, [flat], flat.dtype);\n  var out = reshape({\n    inputs: {\n      x: res\n    },\n    backend: backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(flat);\n  backend.disposeIntermediateTensorInfo(res);\n  return out;\n}\nexport var diagConfig = {\n  kernelName: Diag,\n  backendName: 'webgl',\n  kernelFunc: diag\n};","map":null,"metadata":{},"sourceType":"module"}