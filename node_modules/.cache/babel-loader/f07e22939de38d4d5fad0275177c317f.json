{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { complex } from '../kernels/Complex';\n/**\n * Generates a tensorInfo with all zeros value.\n * @param backend cpu backend.\n * @param shape Shape for the zeros tensor.\n * @param dtype Optional. If set, the result has this dtype.\n */\n\nexport function zeros(backend, shape) {\n  var dtype = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'float32';\n\n  if (dtype === 'complex64') {\n    var real = zeros(backend, shape, 'float32');\n    var imag = zeros(backend, shape, 'float32');\n    return complex({\n      inputs: {\n        real: real,\n        imag: imag\n      },\n      backend: backend\n    });\n  }\n\n  var values = util.makeZerosTypedArray(util.sizeFromShape(shape), dtype);\n  return backend.makeTensorInfo(shape, dtype, values);\n}","map":null,"metadata":{},"sourceType":"module"}