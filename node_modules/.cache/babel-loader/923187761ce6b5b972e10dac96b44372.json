{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\nimport { tile } from '../tile';\n/**\n * Converts images from grayscale to RGB format.\n *\n * @param image A grayscale tensor to convert. The `image`'s last dimension must\n *     be size 1 with at least a two-dimensional shape.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction grayscaleToRGB_(image) {\n  var $image = convertToTensor(image, 'image', 'grayscaleToRGB');\n  var lastDimsIdx = $image.rank - 1;\n  var lastDims = $image.shape[lastDimsIdx];\n  util.assert($image.rank >= 2, function () {\n    return 'Error in grayscaleToRGB: images must be at least rank 2, ' + \"but got rank \".concat($image.rank, \".\");\n  });\n  util.assert(lastDims === 1, function () {\n    return 'Error in grayscaleToRGB: last dimension of a grayscale image ' + \"should be size 1, but got size \".concat(lastDims, \".\");\n  });\n  var reps = new Array($image.rank);\n  reps.fill(1, 0, lastDimsIdx);\n  reps[lastDimsIdx] = 3;\n  return tile($image, reps);\n}\n\nexport var grayscaleToRGB = op({\n  grayscaleToRGB_: grayscaleToRGB_\n});","map":null,"metadata":{},"sourceType":"module"}