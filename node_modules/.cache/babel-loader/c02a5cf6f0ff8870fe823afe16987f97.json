{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, PadV2, util } from '@tensorflow/tfjs-core';\nimport { PadProgram } from '../pad_gpu';\nimport { PadPackedProgram } from '../pad_packed_gpu';\nimport { fill } from './Fill';\nexport var padV2 = function padV2(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var paddings = attrs.paddings,\n      constantValue = attrs.constantValue;\n\n  if (util.sizeFromShape(x.shape) === 0) {\n    // Short-circuit the computation, since x doesn't have value, only\n    // the shape is used to compute output shape to pad.\n    var outputShape = paddings.map(function (p, i) {\n      return p[0]\n      /* beforePad */\n      + x.shape[i] + p[1];\n    }\n    /* afterPad */\n    );\n    return fill({\n      backend: backend,\n      attrs: {\n        shape: outputShape,\n        value: constantValue,\n        dtype: x.dtype\n      }\n    });\n  }\n\n  var program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ? new PadPackedProgram(x.shape, paddings, constantValue) : new PadProgram(x.shape, paddings, constantValue);\n  var customValues = [[constantValue]];\n  return backend.runWebGLProgram(program, [x], x.dtype, customValues);\n};\nexport var padV2Config = {\n  kernelName: PadV2,\n  backendName: 'webgl',\n  kernelFunc: padV2\n};","map":null,"metadata":{},"sourceType":"module"}