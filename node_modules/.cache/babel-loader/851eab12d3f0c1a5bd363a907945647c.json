{"ast":null,"code":"import _slicedToArray from \"C:\\\\PythonProjects\\\\For GIt\\\\FashionDetect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { multiplyImpl } from './Multiply';\nexport function negImpl(xVals, xShape, xDtype) {\n  var minusOne = util.createScalarValue(-1, xDtype);\n  return multiplyImpl([], xShape, minusOne, xVals, xDtype);\n}\nexport function neg(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n  assertNotComplex(x, 'neg');\n  var xVals = backend.data.get(x.dataId).values;\n\n  var _negImpl = negImpl(xVals, x.shape, x.dtype),\n      _negImpl2 = _slicedToArray(_negImpl, 2),\n      res = _negImpl2[0],\n      newShape = _negImpl2[1];\n\n  return backend.makeTensorInfo(newShape, x.dtype, res);\n}\nexport var negConfig = {\n  kernelName: Neg,\n  backendName: 'cpu',\n  kernelFunc: neg\n};","map":null,"metadata":{},"sourceType":"module"}