{"ast":null,"code":"import _toConsumableArray from \"C:\\\\PythonProjects\\\\Fashion\\\\YOLOTFjf\\\\tfjs-yolov5-example\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, Diag, util } from '@tensorflow/tfjs-core';\nexport function diag(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n  var xSize = util.sizeFromShape(x.shape);\n  var xVals = backend.data.get(x.dataId).values;\n  var outBuf = buffer([xSize, xSize], x.dtype);\n  var vals = outBuf.values;\n\n  for (var i = 0; i < xVals.length; i++) {\n    vals[i * xSize + i] = xVals[i];\n  }\n\n  var outShape = [].concat(_toConsumableArray(x.shape), _toConsumableArray(x.shape));\n  return backend.makeTensorInfo(outShape, outBuf.dtype, outBuf.values);\n}\nexport var diagConfig = {\n  kernelName: Diag,\n  backendName: 'cpu',\n  kernelFunc: diag\n};","map":null,"metadata":{},"sourceType":"module"}