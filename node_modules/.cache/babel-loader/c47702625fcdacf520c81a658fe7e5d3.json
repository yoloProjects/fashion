{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN, buffer } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function addN(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var tensors = inputs;\n  assertNotComplex(inputs, 'addN');\n  var vals = tensors.map(function (t) {\n    return backend.data.get(t.dataId).values;\n  });\n  var outBuf = buffer(tensors[0].shape, tensors[0].dtype);\n  var outVals = outBuf.values;\n\n  for (var i = 0; i < tensors.length; i++) {\n    var currVals = vals[i];\n\n    for (var j = 0; j < outVals.length; j++) {\n      outVals[j] += currVals[j];\n    }\n  }\n\n  return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n}\nexport var addNConfig = {\n  kernelName: AddN,\n  backendName: 'cpu',\n  kernelFunc: addN\n};","map":null,"metadata":{},"sourceType":"module"}