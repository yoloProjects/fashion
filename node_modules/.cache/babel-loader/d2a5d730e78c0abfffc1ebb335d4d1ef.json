{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multinomial } from '@tensorflow/tfjs-core';\nimport { MultinomialProgram } from '../multinomial_gpu';\nimport { softmax } from './Softmax';\nexport function multinomial(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var logits = inputs.logits;\n  var numSamples = attrs.numSamples,\n      seed = attrs.seed,\n      normalized = attrs.normalized;\n  var probs = normalized ? logits : softmax({\n    inputs: {\n      logits: logits\n    },\n    backend: backend,\n    attrs: {\n      dim: logits.shape.length - 1\n    }\n  });\n  var batchSize = probs.shape[0];\n  var numOutcomes = probs.shape[1];\n  var program = new MultinomialProgram(batchSize, numOutcomes, numSamples);\n  var customValues = [[seed]];\n  var res = backend.runWebGLProgram(program, [probs], 'int32', customValues);\n\n  if (!normalized) {\n    backend.disposeIntermediateTensorInfo(probs);\n  }\n\n  return res;\n}\nexport var multinomialConfig = {\n  kernelName: Multinomial,\n  backendName: 'webgl',\n  kernelFunc: multinomial\n};","map":null,"metadata":{},"sourceType":"module"}