{"ast":null,"code":"import _slicedToArray from \"C:\\\\PythonProjects\\\\For GIt\\\\FashionDetect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transform } from '@tensorflow/tfjs-core';\nimport { TransformProgram } from '../transform_gpu';\nexport function transform(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var image = inputs.image,\n      transforms = inputs.transforms;\n  var interpolation = attrs.interpolation,\n      fillMode = attrs.fillMode,\n      fillValue = attrs.fillValue,\n      outputShape = attrs.outputShape;\n\n  var _image$shape = _slicedToArray(image.shape, 4),\n      batch = _image$shape[0],\n      imageHeight = _image$shape[1],\n      imageWidth = _image$shape[2],\n      numChannels = _image$shape[3];\n\n  var _ref = outputShape != null ? outputShape : [imageHeight, imageWidth],\n      _ref2 = _slicedToArray(_ref, 2),\n      outHeight = _ref2[0],\n      outWidth = _ref2[1];\n\n  var outShape = [batch, outHeight, outWidth, numChannels];\n  var program = new TransformProgram(imageHeight, imageWidth, interpolation, fillMode, fillValue, outShape);\n  return backend.runWebGLProgram(program, [image, transforms], 'float32');\n}\nexport var transformConfig = {\n  kernelName: Transform,\n  backendName: 'webgl',\n  kernelFunc: transform\n};","map":null,"metadata":{},"sourceType":"module"}