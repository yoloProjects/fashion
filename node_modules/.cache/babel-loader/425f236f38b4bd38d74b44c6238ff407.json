{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function unpack(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var value = inputs.value;\n  var axis = attrs.axis;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  var x = value;\n  var xRank = x.shape.length;\n  var num = value.shape[axis];\n  var outShape = new Array(xRank - 1);\n  var outIndex = 0;\n\n  for (var i = 0; i < xRank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = x.shape[i];\n    }\n  }\n\n  var toDispose = [];\n  var begin = new Array(xRank).fill(0);\n  var size = x.shape.slice();\n  size[axis] = 1;\n  var res = new Array(num);\n\n  for (var _i = 0; _i < res.length; _i++) {\n    begin[axis] = _i;\n    var sliced = slice({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        begin: begin,\n        size: size\n      }\n    });\n    var reshaped = reshape({\n      inputs: {\n        x: sliced\n      },\n      backend: backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n    res[_i] = reshaped;\n    toDispose.push(sliced);\n  }\n\n  toDispose.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return res;\n}\nexport var unpackConfig = {\n  kernelName: Unpack,\n  backendName: 'webgl',\n  kernelFunc: unpack\n};","map":null,"metadata":{},"sourceType":"module"}