{"ast":null,"code":"import _slicedToArray from \"C:\\\\PythonProjects\\\\For GIt\\\\FashionDetect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherNd, util } from '@tensorflow/tfjs-core';\nimport { gatherNdImpl } from './GatherNd_Impl';\nexport function gatherNd(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var params = inputs.params,\n      indices = inputs.indices;\n  var paramsSize = util.sizeFromShape(params.shape);\n  var indicesShape = indices.shape;\n  var sliceRank = indicesShape[indicesShape.length - 1];\n\n  var _backend_util$prepare = backend_util.prepareAndValidate(params, indices),\n      _backend_util$prepare2 = _slicedToArray(_backend_util$prepare, 4),\n      resultShape = _backend_util$prepare2[0],\n      numSlices = _backend_util$prepare2[1],\n      sliceSize = _backend_util$prepare2[2],\n      strides = _backend_util$prepare2[3];\n\n  if (numSlices === 0) {\n    return backend.makeTensorInfo(resultShape, params.dtype, []);\n  }\n\n  var indicesData = backend.data.get(indices.dataId).values;\n  var paramsBuf = backend.bufferSync(params);\n  var outBuf = gatherNdImpl(indicesData, paramsBuf, params.dtype, numSlices, sliceRank, sliceSize, strides, params.shape, paramsSize);\n  return backend.makeTensorInfo(resultShape, params.dtype, outBuf.values);\n}\nexport var gatherNdConfig = {\n  kernelName: GatherNd,\n  backendName: 'cpu',\n  kernelFunc: gatherNd\n};","map":null,"metadata":{},"sourceType":"module"}